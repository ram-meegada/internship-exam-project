# Generated by Django 4.1.7 on 2023-05-01 08:56

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_mysql.models
import question.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name_plural': '5. Users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Contenders',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(default=None, max_length=255, unique=True)),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=255)),
            ],
            options={
                'verbose_name_plural': '10. Contenders',
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(default=None, max_length=255)),
                ('question_type', models.CharField(choices=[('1', 'text'), ('2', 'checkbox'), ('3', 'radio')], default='1', max_length=255)),
                ('option_1', models.CharField(blank=True, max_length=20, null=True)),
                ('option_2', models.CharField(blank=True, max_length=20, null=True)),
                ('option_3', models.CharField(blank=True, max_length=20, null=True)),
                ('option_4', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'verbose_name_plural': '4. Questions',
            },
        ),
        migrations.CreateModel(
            name='QuizQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quiz_question', models.CharField(default=None, max_length=255)),
                ('quiz_question_type', models.CharField(choices=[('1', 'text'), ('2', 'checkbox'), ('3', 'radio')], default='1', max_length=255)),
                ('quiz_option_1', models.CharField(blank=True, max_length=20, null=True)),
                ('quiz_option_2', models.CharField(blank=True, max_length=20, null=True)),
                ('quiz_option_3', models.CharField(blank=True, max_length=20, null=True)),
                ('quiz_option_4', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'verbose_name_plural': '1. QuizQuestions',
            },
        ),
        migrations.CreateModel(
            name='TempQuizAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=200)),
                ('answer', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name_plural': '9. TempQuizAnswer',
            },
        ),
        migrations.CreateModel(
            name='Testinglistfield',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('items', question.fields.ListField(token=',')),
                ('content', models.TextField(blank=True, default=None, max_length=200, null=True)),
                ('tests', django_mysql.models.ListCharField(models.IntegerField(), blank=True, default=None, max_length=66, null=True, size=6)),
            ],
        ),
        migrations.CreateModel(
            name='TestingPurpose',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=255)),
                ('question_type', models.CharField(choices=[('1', 'text'), ('2', 'checkbox'), ('3', 'radio')], default='1', max_length=255)),
                ('options', models.JSONField(default=dict)),
            ],
        ),
        migrations.CreateModel(
            name='TestingQuizQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quiz_question', models.CharField(default=None, max_length=255)),
                ('quiz_question_type', models.CharField(choices=[('1', 'text'), ('2', 'checkbox'), ('3', 'radio')], default='1', max_length=255)),
                ('options', models.JSONField(default=dict)),
            ],
        ),
        migrations.CreateModel(
            name='TestingAttemptQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.CharField(max_length=200)),
                ('question_no', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='qsn3', to='question.testingpurpose')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nothing3', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TempScoreofCandidate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('marks_obtained', models.IntegerField()),
                ('user', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='question.contenders')),
            ],
            options={
                'verbose_name_plural': '12. TempScoreofCandidate',
            },
        ),
        migrations.CreateModel(
            name='TempQuiz',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=200)),
                ('answer', models.CharField(max_length=255)),
                ('answer_check', models.BooleanField(default=False)),
                ('user', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='question.contenders')),
            ],
            options={
                'verbose_name_plural': '11. TempQuiz',
            },
        ),
        migrations.CreateModel(
            name='ScoreOfCandidate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_ques_attempted', models.IntegerField(default=0)),
                ('Unattempted_ques', models.IntegerField(default=0)),
                ('marks_obtained', models.IntegerField(default=0)),
                ('Total_marks', models.IntegerField(default=13)),
                ('candidate', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': '7. ScoreofCandidates',
            },
        ),
        migrations.CreateModel(
            name='Ranking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('marks_obtained', models.IntegerField()),
                ('rank', models.IntegerField()),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': '8. Rankings of candidates',
            },
        ),
        migrations.CreateModel(
            name='QuizAnswersSheet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quiz_question_ans', models.CharField(max_length=255)),
                ('check_question', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='question.quizquestion')),
            ],
            options={
                'verbose_name_plural': '6. QuizAnswersSheet',
            },
        ),
        migrations.CreateModel(
            name='AnswerQuizQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quiz_answer', models.CharField(blank=True, max_length=255, null=True)),
                ('quiz_question_no', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='qsn2', to='question.quizquestion')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nothing2', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': '2. AnswerQuizQuestions',
            },
        ),
        migrations.CreateModel(
            name='AnswerQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.CharField(blank=True, max_length=255, null=True)),
                ('question_no', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='qsn', to='question.question')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nothing', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': '3. AnswerQuestions',
            },
        ),
    ]
